public async Task<CorrectiveActionPlanDto?> GetPlanWithAttachmentsAsync(Guid planId)
{
    var plan = await _context.CorrectiveActionPlans
        .Include(p => p.Report)
        .Include(p => p.Attachments) // Assuming a navigation property to attachments exists
        .FirstOrDefaultAsync(p => p.Id == planId);

    if (plan == null) return null;

    return new CorrectiveActionPlanDto
    {
        ReportId = plan.ReportId,
        Report = plan.Report,
        PlanDetails = plan.PlanDetails,
        Deadline = plan.Deadline,
        FileList = plan.Attachments?.Select(a => new AttachmentDto
        {
            Id = a.Id,
            FileName = a.FileName,
            Url = a.Url
        }).ToList()
    };
}

public async Task<CorrectiveActionPlanDto?> GetPlanByIdAsync(Guid planId)
{
    return await _planRepository.GetPlanWithAttachmentsAsync(planId);
}

[HttpGet("{planId}")]
public async Task<IActionResult> GetPlanById(Guid planId)
{
    var result = await _planService.GetPlanByIdAsync(planId);
    if (result == null)
        return NotFound("Plan not found");

    return Ok(result);
}
