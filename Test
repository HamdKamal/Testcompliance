public class ReportCategoryDto
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public string? NameAr { get; set; }
    public List<ReportSubCategoryDto> SubCategories { get; set; } = new();
}

public class ReportSubCategoryDto
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public string? NameAr { get; set; }
    public List<ReportEntryDto> Entries { get; set; } = new();
}

public class ReportEntryDto
{
    public int Id { get; set; }
    public string? Name { get; set; }
    public string? NameAr { get; set; }
}

public async Task<List<ReportCategoryDto>> GetReportStructureDto()
{
    var categories = await dbContext.ReportCategories
        .Where(c => !c.IsDeleted)
        .Include(c => c.SubCategories.Where(sc => !sc.IsDeleted))
            .ThenInclude(sc => sc.Entries.Where(e => !e.IsDeleted))
        .ToListAsync();

    var result = categories.Select(category => new ReportCategoryDto
    {
        Id = category.Id,
        Name = category.Name,
        NameAr = category.NameAr,
        SubCategories = category.SubCategories.Select(sub => new ReportSubCategoryDto
        {
            Id = sub.Id,
            Name = sub.Name,
            NameAr = sub.NameAr,
            Entries = sub.Entries.Select(entry => new ReportEntryDto
            {
                Id = entry.Id,
                Name = entry.Name,
                NameAr = entry.NameAr
            }).ToList()
        }).ToList()
    }).ToList();

    return result;
}

public string ReportNumber { get; set; } = $"RPT-{DateTime.Today.Year}-{DateTime.Today.Month:D2}-{new Random().Next(1000, 9999)}";
